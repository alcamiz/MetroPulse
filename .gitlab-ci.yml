stages:
  - deploy_backend
  - build_frontend
  - pytest_unit_tests
  - postman_tests

build_frontend:
  stage: build_frontend
  image: node:20  # Use a Node.js image
  allow_failure: true
  script:
    - make exec  # Run the Makefile task for frontend build
  artifacts:
    paths:
      - frontend/dist # Define the path to the frontend build artifacts

deploy_backend:
  stage: deploy_backend
  image: ubuntu
  allow_failure: true
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no ubuntu@ec2-18-222-13-146.us-east-2.compute.amazonaws.com 'cd ~/MetroPulse/backend && git pull && sudo docker stop $(sudo docker ps -aqf name=metropulse) && sudo docker build --tag backend --file ./Dockerfile . && sudo docker run -d --name metropulse --rm --network=host -i -t -v /home/ubuntu/MetroPulse/backend/:/usr/python backend'
  only:
    - fixed-main

postman_tests:
    stage: postman_tests
    image: 
        name: postman/newman:alpine
        entrypoint: [""]
    script:
        - cd backend
        - newman run postman_tests.json
        
pytest_unit_tests:
    stage: pytest_unit_tests
    script:
      - cd backend
      - pip3 install -r requirements.txt
      - python3 unit_tests.py
