stages:
  - deploy_backend
  - build_frontend
  - pytest_unit_tests
  - postman_tests

build_frontend:
  stage: build_frontend
  image: node:20  # Use a Node.js image
  allow_failure: true
  script:
    - make exec  # Run the Makefile task for frontend build
  artifacts:
    paths:
      - frontend/dist # Define the path to the frontend build artifacts

deploy_backend:
  stage: deploy_backend
  image: ubuntu
  allow_failure: true
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no ubuntu@ec2-18-222-13-146.us-east-2.compute.amazonaws.com 'cd ~ && rm -r MetroPulse && git clone https://gitlab.com/ky5t0nbr/MetroPulse.git --depth=1 --branch fixed-main --single-branch && sudo docker stop $(sudo docker ps -aqf name=metropulse) && sudo docker build --tag backend --file ./Dockerfile . && sudo docker run -d --name metropulse --rm --network=host -i -t -v /home/ubuntu/MetroPulse/backend/:/usr/python backend'
  only:
    - fixed-main

postman_tests:
    stage: postman_tests
    image: 
        name: postman/newman:alpine
        entrypoint: [""]
    script:
        - cd backend
        - newman run postman_tests.json
        
pytest_unit_tests:
    stage: pytest_unit_tests
    image: ubuntu
    script:
      - cd backend
      - apt-get update
      - apt-get install -y python3 python3-pip
      - pip3 install -r requirements.txt
      - python3 unit_tests.py

frontend_ui_test:
  stage: test
  image: python:3.10
  script:
  - cd frontend
  - pip install --upgrade pip
  - pip install --no-cache-dir -r ./flow_tests/reqs.txt
  - apt-get update -q -y
  - apt-get --yes install libnss3
  - apt-get --yes install libgconf-2-4
  - apt-get install libx11-xcb1

  # ripped straight from https://gitlab.com/10AMGroup11/bookrus/-/blob/main/.gitlab-ci.yml
  # Add chrome to container
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  - apt-get update -q -y 
  - apt-get install -y google-chrome-stable

  # Download and unzip the chromedriver
  - apt-get install -yqq unzip
  - wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
  - unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

  # Run selenium tests
  - python3 ui_tests.py
